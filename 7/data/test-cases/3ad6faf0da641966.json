{"uid":"3ad6faf0da641966","name":"test_geolocation_by_object[\\u041b\\u0435\\u043d\\u0438\\u043d\\u0433\\u0440\\u0430\\u0434\\u0441\\u043a\\u0438\\u0439 \\u0432\\u043e\\u043a\\u0437\\u0430\\u043b, \\u041c\\u043e\\u0441\\u043a\\u0432\\u0430-400]","fullName":"TestScenario#test_geolocation_by_object","historyId":"d3b907f45bd2c2340b49c7c2bedb0fc3","time":{"start":1725105435910,"stop":1725105436615,"duration":705},"status":"failed","statusMessage":"AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"geocode_base_url = 'https://geocode-maps.yandex.ru/1.x/?apikey=2fd5c994-1d9a-4c12-b654-bb859a04d497'\nheaders = {}, object_name = 'Ленинградский вокзал, Москва'\nexpected_status_code = 400\n\n    @pytest.mark.parametrize(\"object_name, expected_status_code\", [\n        (\"Ярославский вокзал, Москва\", 200),\n        (\"Казанский вокзал, Москва\", 400),\n        (\"Ленинградский вокзал, Москва\", 400),\n    ])\n    def test_geolocation_by_object(geocode_base_url, headers, object_name, expected_status_code):\n        url = f\"{geocode_base_url}&geocode=Ярославский вокзал&format=json\"\n        response = requests.get(url, headers=headers)\n>       assert response.status_code == expected_status_code\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\nTestScenario.py:87: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"headers","time":{"start":1725105435910,"stop":1725105435910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"geocode_base_url","time":{"start":1725105435910,"stop":1725105435910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[],"labels":[{"name":"suite","value":"TestScenario"},{"name":"host","value":"fv-az1766-590"},{"name":"thread","value":"2092-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestScenario"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_status_code","value":"400"},{"name":"object_name","value":"'Ленинградский вокзал, Москва'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"3ad6faf0da641966.json","parameterValues":["400","'Ленинградский вокзал, Москва'"]}